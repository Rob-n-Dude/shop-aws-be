service: product-service

frameworkVersion: "3"

provider:
  name: aws
  runtime: nodejs18.x
  stage: dev
  region: eu-west-1
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:*
          Resource:
            - {"Fn::GetAtt": ["ProductsTable", "Arn"]}
            - {"Fn::GetAtt": ["StockTable", "Arn"]}
        - Effect: Allow
          Action:
            - sqs:*
          Resource:
            - {"Fn::GetAtt": ["CatalogItemsQueue", "Arn"]}
        - Effect: Allow
          Action:
            - sns:*
          Resource:
            - {"Ref": "CreateProductTopic"}

  httpApi:
    cors:
      allowedOrigins:
        - '*'
  environment:
    SQS_URL:
      Ref: CatalogItemsQueue
    SNS_ARN: 
      Ref: CreateProductTopic

package:
  exclude:
    - ./**
  include:
    - build/**

custom:
  prune:
    automatic: true

functions:
  getProducts:
    handler: build/bundle.getProducts
    events:
     - httpApi:
        path: /products
        method: get
  getProduct:
    handler: build/bundle.getProduct
    events:
     - httpApi:
        path: /products/{productId}
        method: get
  createProduct:
    handler: build/bundle.createProduct
    events:
     - httpApi:
        path: /products
        method: post
  catalogBatchProcess:
    handler: build/bundle.catalogBatchProcess
    events:
      - sqs:
          batchSize: 5
          arn:
            Fn::GetAtt:
              - CatalogItemsQueue
              - Arn

resources:
  Resources:
    ProductsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
        TableName: ProductsTable
      DependsOn: StockTable
      DeletionPolicy: Retain

    StockTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: productId
            AttributeType: S
        KeySchema:
          - AttributeName: productId
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
        TableName: StockTable
    
    CatalogItemsQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: CatalogItemsQueue

    CreateProductTopic:
      Type: AWS::SNS::Topic
      Properties:
        TopicName: CreateProductTopic 

    EmailSubscription:
      Type: AWS::SNS::Subscription
      Properties:
        Protocol: email
        TopicArn:
          Ref: CreateProductTopic
        Endpoint: egor_semenov@epam.com
   
    FilteredEmailSubscription:
      Type: AWS::SNS::Subscription
      Properties:
        Protocol: email
        TopicArn:
          Ref: CreateProductTopic
        Endpoint: test.subscription.sns@yandex.by
        FilterPolicy:
          price:
            - 10

outputs:
  CatalogItemsQueueArn:
    Value:
      Fn::GetAtt:
        - CatalogItemsQueue
        - Arn
    Export:
      Name: CatalogItemsQueueArn

plugins:
  - serverless-prune-versions
