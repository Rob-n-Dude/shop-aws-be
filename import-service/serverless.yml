service: import-service

frameworkVersion: "3"

provider:
  name: aws
  runtime: nodejs18.x
  stage: dev
  region: eu-west-1
  httpApi:
    cors:
      allowedOrigins:
        - '*'
  iamRoleStatements:
    - Effect: Allow
      Action: s3:ListBucket
      Resource:
        - arn:aws:s3:::${self:custom.s3ImportBucketName}
    - Effect: Allow
      Action:
        - s3:*
      Resource:  
        - arn:aws:s3:::${self:custom.s3ImportBucketName}/*
    - Effect: Allow
      Action: sqs:*
      Resource: 
        - arn:aws:sqs:eu-west-1:640385011454:CatalogItemsQueue
        # - arn:aws:sqs:::${self:custom.SQS_NAME}/*
        # - ${cf:product-service.${self:custom.CatalogItemsQueue}}
        # - Fn::ImportValue: CatalogItemsQueueArn

package:
  exclude:
    - ./**
  include:
    - build/**

custom:
  prune:
    automatic: true
  s3ImportBucketName: egor-semenov-import-service-bucket
  SQS_NAME: CatalogItemsQueue

functions:
  importProductsFile:
    handler: build/bundle.importProductsFile
    events:
     - httpApi:
        path: /import
        method: get
  importFileParser:
    handler: build/bundle.importFileParser
    environment:
      SQS_NAME: ${self:custom.SQS_NAME}
    events:
     - s3:
        bucket: ${self:custom.s3ImportBucketName}
        event: s3:ObjectCreated:*
        rules:
          - prefix: uploaded/
        existing: true

plugins:
  - serverless-prune-versions
